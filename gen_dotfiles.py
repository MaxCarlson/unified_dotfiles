#!/usr/bin/env python3
import sys, yaml

if len(sys.argv)!=2 or sys.argv[1] not in ("zsh","powershell"):
    print("Usage: gen_dotfiles.py [zsh|powershell]", file=sys.stderr)
    sys.exit(1)

shell = sys.argv[1]
defs = yaml.safe_load(open(__file__.rsplit("/",1)[0] + "/../definitions/commands.yaml"))

if shell=="zsh":
    # header
    print("# autogenerated — source via your .zshrc")
    print('source "$DOTFILES/addonbase.zsh"')
    for a in defs.get("aliases",[]):
        print(f'register_alias "{a["name"]}" "{a["help"]}"')
        print(f"alias {a['name']}='{a['cmd']}'")
    for f in defs.get("functions",[]):
        print(f'register_function "{f["name"]}" "{f["help"]}"')
        print(f["body"])
elif shell=="powershell":
    # header
    print("# autogenerated — dot-source via your PowerShell $PROFILE")
    for a in defs.get("aliases",[]):
        # Set-Alias doesn’t support help-strings natively; you could write a comment
        print(f"# {a['help']}")
        print(f"Set-Alias -Name {a['name']} -Value {a['cmd']}")
    for f in defs.get("functions",[]):
        print(f"# {f['help']}")
        # wrap the body in a scriptblock
        for line in f["body"].splitlines():
            print(line.replace("function(","function "))

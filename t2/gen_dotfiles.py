#!/usr/bin/env python3
import sys, yaml, os

if len(sys.argv) != 2 or sys.argv[1] not in ("zsh", "powershell"):
    print("Usage: gen_dotfiles.py [zsh|powershell]", file=sys.stderr)
    sys.exit(1)

shell = sys.argv[1]
base = os.path.dirname(__file__)
aliases = yaml.safe_load(open(os.path.join(base, "../definitions/aliases.yaml"), encoding="utf-8"))
functions = yaml.safe_load(open(os.path.join(base, "../definitions/functions.yaml"), encoding="utf-8"))

if shell == "zsh":
    print("# autogenerated — source via your .zshrc")
    print('source "$DOTFILES/addonbase.zsh"')
    for a in aliases.get("aliases", []):
        # allow scalar or per-shell mapping
        cmd = a["cmd"]
        zsh_cmd = cmd if isinstance(cmd, str) else cmd.get("zsh")
        if not zsh_cmd:
            continue
        print(f'register_alias "{a["name"]}" "{a["help"]}"')
        print(f"alias {a['name']}='{zsh_cmd}'")

    for f in functions.get("functions", []):
        body = f["body"].get("zsh")
        if not body:
            continue
        print(f'register_function "{f["name"]}" "{f["help"]}"')
        print(body)

elif shell == "powershell":
    print("# autogenerated — dot-source via your PowerShell $PROFILE")
    for a in aliases.get("aliases", []):
        cmd = a["cmd"]
        ps_cmd = cmd if isinstance(cmd, str) else cmd.get("powershell")
        if not ps_cmd:
            continue
        print(f"# {a['help']}")
        print(f"Set-Alias -Name {a['name']} -Value {ps_cmd}")

    for f in functions.get("functions", []):
        body = f["body"].get("powershell")
        if not body:
            continue
        print(f"# {f['help']}")
        print(body)


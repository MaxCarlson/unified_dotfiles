# definitions/functions.yaml
functions:
  - name: ag
    help: "Show all aliases (using: alias | rg)."
    body:
      zsh: |
        function ag() {
          dotcmd ag "$@"
        }
      powershell: |
        function ag {
          dotcmd ag $args
        }

  - name: ahelp
    help: "Search alias descriptions by keyword."
    body:
      zsh: |
        function ahelp() {
          dotcmd ahelp "$@"
        }
      powershell: |
        function ahelp {
          dotcmd ahelp $args
        }

  - name: fhelp
    help: "Search function descriptions by keyword."
    body:
      zsh: |
        function fhelp() {
          dotcmd fhelp "$@"
        }
      powershell: |
        function fhelp {
          dotcmd fhelp $args
        }

  - name: helpall
    help: "Search both function and alias descriptions by keyword."
    body:
      zsh: |
        function helpall() {
          dotcmd helpall "$@"
        }
      powershell: |
        function helpall {
          dotcmd helpall $args
        }

  - name: fg
    help: "Search functions by name or description, highlighting matches."
    body:
      zsh: |
        function fg() {
          dotcmd fg "$@"
        }
      powershell: |
        function fg {
          dotcmd fg $args
        }

  - name: functionsl
    help: "Lists all registered functions and their descriptions."
    body:
      zsh: |
        function functionsl() {
          dotcmd functionsl
        }
      powershell: |
        function functionsl {
          dotcmd functionsl
        }

  - name: retrycmd
    help: "Runs a command or alias repeatedly until it succeeds; usage: retrycmd <command> [args...]"
    body:
      zsh: |
        function retrycmd() {
          dotcmd retrycmd "$@"
        }
      powershell: |
        function retrycmd {
          dotcmd retrycmd $args
        }

  - name: mkcd
    help: "Creates a directory if it doesn't exist and returns its full path."
    body:
      zsh: |
        function mkcd() {
          dotcmd mkcd "$1" "${2:-.}"
        }
      powershell: |
        function mkcd {
          dotcmd mkcd $args
        }

  - name: create_if_missing
    help: "Creates a file if it doesn't exist."
    body:
      zsh: |
        function create_if_missing() {
          dotcmd create_if_missing "$@"
        }
      powershell: |
        function create_if_missing {
          dotcmd create_if_missing $args
        }

  - name: cdobs
    help: "Prints the Obsidian directory path from the OBSIDIAN env var."
    body:
      zsh: |
        function cdobs() {
          dotcmd cdobs
        }
      powershell: |
        function cdobs {
          dotcmd cdobs
        }

  - name: get_file_size
    help: "Gets the size of a file in bytes."
    body:
      zsh: |
        function get_file_size() {
          dotcmd get_file_size "$@"
        }
      powershell: |
        function get_file_size {
          dotcmd get_file_size $args
        }

  - name: hrg
    help: "Search a program's help output for a pattern (tries --help, -h, -?, /?)."
    body:
      zsh: |
        function hrg() {
          dotcmd hrg "$1" "$2"
        }
      powershell: |
        function hrg {
          dotcmd hrg $args
        }

  - name: mkvi
    help: "Creates a directory and opens a file using Neovim."
    body:
      zsh: |
        function mkvi() {
          dotcmd mkvi "$1" "${2:-}"
        }
      powershell: |
        function mkvi {
          dotcmd mkvi $args
        }

  - name: lt
    help: "Lists files in tree format up to the specified depth."
    body:
      zsh: |
        function lt() {
          dotcmd lt "$1"
        }
      powershell: |
        function lt {
          dotcmd lt $args
        }

  - name: ltf
    help: "Runs lt with a specified depth and writes output to a file."
    body:
      zsh: |
        function ltf() {
          dotcmd ltf "$1" "${2:-./ltf-output.txt}"
        }
      powershell: |
        function ltf {
          dotcmd ltf $args
        }

  - name: fdtl
    help: "Finds files by name, sorted by modification time, then runs eza -lt."
    body:
      zsh: |
        function fdtl() {
          dotcmd fdtl "$1"
        }
      powershell: |
        function fdtl {
          dotcmd fdtl $args
        }

  - name: fdta
    help: "Finds files by name, sorted by modification time."
    body:
      zsh: |
        function fdta() {
          dotcmd fdta "$1"
        }
      powershell: |
        function fdta {
          dotcmd fdta $args
        }

  - name: rg
    help: "Runs ripgrep with default options."
    body:
      zsh: |
        function rg() {
          dotcmd rg "$@"
        }
      powershell: |
        function rg {
          dotcmd rg $args
        }

  - name: rgta
    help: "Finds files containing a match, sorted by modification time."
    body:
      zsh: |
        function rgta() {
          dotcmd rgta "$1" "${2:-.}"
        }
      powershell: |
        function rgta {
          dotcmd rgta $args
        }

  - name: rgtf
    help: "Prints matching lines in files, sorted by modification time."
    body:
      zsh: |
        function rgtf() {
          dotcmd rgtf "$1" "${2:-.}"
        }
      powershell: |
        function rgtf {
          dotcmd rgtf $args
        }

  - name: rgfn
    help: "Finds files by content match, sorted by modification time."
    body:
      zsh: |
        function rgfn() {
          dotcmd rgfn "$1" "${2:-.}"
        }
      powershell: |
        function rgfn {
          dotcmd rgfn $args
        }

  - name: rgtc
    help: "Finds files matching by content OR filename, sorted by modification time."
    body:
      zsh: |
        function rgtc() {
          dotcmd rgtc "$1" "${2:-.}"
        }
      powershell: |
        function rgtc {
          dotcmd rgtc $args
        }

  - name: rgtm
    help: "Finds files matching by content OR filename, sorted by creation time."
    body:
      zsh: |
        function rgtm() {
          dotcmd rgtm "$1" "${2:-.}"
        }
      powershell: |
        function rgtm {
          dotcmd rgtm $args
        }

  - name: rgmax
    help: "Returns top N files with the most matches for a phrase."
    body:
      zsh: |
        function rgmax() {
          dotcmd rgmax "$1" "${2:-1}" "${3:-.}"
        }
      powershell: |
        function rgmax {
          dotcmd rgmax $args
        }

  - name: rgmaxn
    help: "Alias for rgmax with default num_files=100."
    body:
      zsh: |
        function rgmaxn() {
          dotcmd rgmaxn "$1" "${2:-.}"
        }
      powershell: |
        function rgmaxn {
          dotcmd rgmaxn $args
        }

  - name: rp
    help: "Copy files via rsync under the hood with in-place progress."
    body:
      zsh: |
        function rp() {
          dotcmd rp "$@"
        }
      powershell: |
        function rp {
          dotcmd rp $args
        }

  - name: rpv
    help: "Verbose copy (rsync under the hood, very verbose)."
    body:
      zsh: |
        function rpv() {
          dotcmd rpv "$@"
        }
      powershell: |
        function rpv {
          dotcmd rpv $args
        }

  - name: rpd
    help: "Dry-run copy (rsync under the hood)."
    body:
      zsh: |
        function rpd() {
          dotcmd rpd "$@"
        }
      powershell: |
        function rpd {
          dotcmd rpd $args
        }

  - name: rpi
    help: "Copy ignoring existing files (rsync under the hood)."
    body:
      zsh: |
        function rpi() {
          dotcmd rpi "$@"
        }
      powershell: |
        function rpi {
          dotcmd rpi $args
        }

  - name: rpdel
    help: "Copy then delete source files (rsync under the hood)."
    body:
      zsh: |
        function rpdel() {
          dotcmd rpdel "$@"
        }
      powershell: |
        function rpdel {
          dotcmd rpdel $args
        }


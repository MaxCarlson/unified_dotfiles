# autogenerated â€” source via your .zshrc

# Show all aliases (using: alias | rg).
function ag() {
  dotcmd ag "$@"
}


# Search alias descriptions by keyword.
function ahelp() {
  dotcmd ahelp "$@"
}


# Search function descriptions by keyword.
function fhelp() {
  dotcmd fhelp "$@"
}


# Search both function and alias descriptions by keyword.
function helpall() {
  dotcmd helpall "$@"
}


# Search functions by name or description, highlighting matches.
function fg() {
  dotcmd fg "$@"
}


# Lists all registered functions and their descriptions.
function functionsl() {
  dotcmd functionsl
}


# Runs a command or alias repeatedly until it succeeds; usage: retrycmd <command> [args...]
function retrycmd() {
  dotcmd retrycmd "$@"
}


# Creates a directory if it doesn't exist and returns its full path.
function mkcd() {
  dotcmd mkcd "$1" "${2:-.}"
}


# Creates a file if it doesn't exist.
function create_if_missing() {
  dotcmd create_if_missing "$@"
}


# Prints the Obsidian directory path from the OBSIDIAN env var.
function cdobs() {
  dotcmd cdobs
}


# Gets the size of a file in bytes.
function get_file_size() {
  dotcmd get_file_size "$@"
}


# Search a program's help output for a pattern (tries --help, -h, -?, /?).
function hrg() {
  dotcmd hrg "$1" "$2"
}


# Creates a directory and opens a file using Neovim.
function mkvi() {
  dotcmd mkvi "$1" "${2:-}"
}


# Lists files in tree format up to the specified depth.
function lt() {
  dotcmd lt "$1"
}


# Runs lt with a specified depth and writes output to a file.
function ltf() {
  dotcmd ltf "$1" "${2:-./ltf-output.txt}"
}


# Finds files by name, sorted by modification time, then runs eza -lt.
function fdtl() {
  dotcmd fdtl "$1"
}


# Finds files by name, sorted by modification time.
function fdta() {
  dotcmd fdta "$1"
}


# Runs ripgrep with default options.
function rg() {
  dotcmd rg "$@"
}


# Finds files containing a match, sorted by modification time.
function rgta() {
  dotcmd rgta "$1" "${2:-.}"
}


# Prints matching lines in files, sorted by modification time.
function rgtf() {
  dotcmd rgtf "$1" "${2:-.}"
}


# Finds files by content match, sorted by modification time.
function rgfn() {
  dotcmd rgfn "$1" "${2:-.}"
}


# Finds files matching by content OR filename, sorted by modification time.
function rgtc() {
  dotcmd rgtc "$1" "${2:-.}"
}


# Finds files matching by content OR filename, sorted by creation time.
function rgtm() {
  dotcmd rgtm "$1" "${2:-.}"
}


# Returns top N files with the most matches for a phrase.
function rgmax() {
  dotcmd rgmax "$1" "${2:-1}" "${3:-.}"
}


# Alias for rgmax with default num_files=100.
function rgmaxn() {
  dotcmd rgmaxn "$1" "${2:-.}"
}


# Copy files via rsync under the hood with in-place progress.
function rp() {
  dotcmd rp "$@"
}


# Verbose copy (rsync under the hood, very verbose).
function rpv() {
  dotcmd rpv "$@"
}


# Dry-run copy (rsync under the hood).
function rpd() {
  dotcmd rpd "$@"
}


# Copy ignoring existing files (rsync under the hood).
function rpi() {
  dotcmd rpi "$@"
}


# Copy then delete source files (rsync under the hood).
function rpdel() {
  dotcmd rpdel "$@"
}


alias fnrg='compgen -A function | rg'  # List all functions using compgen and ripgrep.
alias hg='history | rg'  # Search command history using ripgrep.
alias lhg='lhistory | rg'  # Search large history using lhistory and ripgrep.
alias rm='trash'  # Move files to trash instead of deleting them.
alias bat='bat'  # bat command (as installed).
alias l='ezaw --no-permissions --git --icons --no-user'  # List files (eza): no permissions, git info, icons, no user info.
alias ls='ezaw -lah --no-permissions --git --icons --modified --group-directories-first --smart-group --no-user
'  # List files in long format (eza): with permissions, git info, icons, modified time, smart grouping.
alias la='ezaw -a --no-permissions --git --icons --classify --grid --group-directories-first'  # List all files (eza): show hidden files with classify and grid view.
alias ll='ezaw -lah --no-permissions --git --icons --modified --group-directories-first --smart-group'  # Long listing (eza): display created time, group directories first, smart grouping.
alias lls='ezaw -lah --no-permissions --git --icons --modified --group-directories-first --smart-group --total-size'  # Long listing (eza): display created time, group directories first, smart grouping, total-size.
alias lll='ezaw -lah --git --icons --modified --accessed --group-directories-first --smart-group --total-size'  # Long listing (eza): total size, created/modified times with icons and git info.
alias llll='ezaw -lah --all --header --group-directories-first --smart-group --icons --git --time-style=iso --modified --accessed --changed --inode --links --sort=name --reverse --hyperlink --absolute=on --blocksize --numeric
'  # Long listing (eza): total size, created/modified times with icons and git info.
alias lo='ezaw -lah --no-permissions --git --icons --no-user --no-time --no-filesize'  # List files (eza): without user, time, or filesize info.
alias lg='ezaw -lah --no-permissions --git --icons --created --modified --group-directories-first --smart-group --git-repos'  # List files (eza): with created & modified times and git repository info.
alias laha='ezaw -lahSOnMIHZo@ --git --git-repos --icons --smart-group --changed --accessed --created'  # Advanced listing (eza): smart grouping with changed, accessed, and created times.
alias lss='ezaw --sort=size'  # Sort files by size using eza.
alias lst='ezaw --sort=time'  # Sort files by modification time using eza.
alias lse='ezaw --sort=extension'  # Sort files by file extension using eza.
alias lx='ezaw --icons --grid --classify --colour=auto --sort=type --group-directories-first --header --modified --created --git --binary --group
'  # List files (eza): grid, classify, auto-color, sorted by type, with grouped directories.
alias l1='ezaw --icons --classify --tree --level=1 --git'  # Tree view (eza): list directory tree at level 1.
alias l2='ezaw --icons --classify --tree --level=2 --git'  # Tree view (eza): list directory tree at level 2.
alias l3='ezaw --icons --classify --tree --level=3 --git'  # Tree view (eza): list directory tree at level 3.
alias l4='ezaw --icons --classify --tree --level=4 --git'  # Tree view (eza): list directory tree at level 4.
alias l5='ezaw --icons --classify --tree --level=5 --git'  # Tree view (eza): list directory tree at level 5.
alias lt1='ezaw --icons --classify --long --tree --level=1 --git'  # Long tree view (eza): directory tree at level 1.
alias lt2='ezaw --icons --classify --long --tree --level=2 --git'  # Long tree view (eza): directory tree at level 2.
alias lt3='ezaw --icons --classify --long --tree --level=3 --git'  # Long tree view (eza): directory tree at level 3.
alias lt4='ezaw --icons --classify --long --tree --level=4 --git'  # Long tree view (eza): directory tree at level 4.
alias lt5='ezaw --icons --classify --long --tree --level=5 --git'  # Long tree view (eza): directory tree at level 5.
alias gpnew='git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)'  # Git push new branch: set upstream to origin on current branch.
alias pcolors='for i in {0..255}; do
  print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " \
    ${${(M)$((i%6)):#3}:+$'\n'};
done
'  # Print terminal colors (0-255) using a loop.
alias fzcd='cd $(find . -type d | fzf)'  # Fuzzy find a directory and cd into it.
alias fzcdp='cd $(find . -type d | fzf --preview "tree -C {} | head -200")'  # Fuzzy find a directory with a tree preview and cd into it.
alias fzh='fzf --height 40% --reverse --preview "echo {}" --tac < <(history | cut -c 8-)'  # Fuzzy search command history using fzf.
alias fzfp='fzf --preview "bat --style=numbers --color=always {}"'  # Fuzzy file finder with bat preview.
alias fzkill='kill -9 $(ps -ef | fzf --preview "echo {}" | awk "{print \$2}")'  # Fuzzy find a process and kill it.
alias fzssh='ssh $(cut -f1 -d" " ~/.ssh/known_hosts | fzf)'  # Fuzzy SSH: select a hostname from known_hosts.
alias fzgb='git checkout $(git branch | fzf)'  # Fuzzy git branch switch using fzf.
alias grao='git remote add origin'  # Add a new git remote called origin.
alias gdup='git fetch && git diff @{u}..HEAD'  # Fetch. Diff of changes to remote branch if local was pushed.
alias gdru='git fetch && git diff HEAD..@{u}'  # Fetch. Diff of changes to local branch if remote was pulled.
alias gdsu='git fetch && git diff HEAD...@{u}'  # Fetch. Diff of local and remote (combined).
alias glru='git fetch && git log --oneline --left-right --graph HEAD...@{u}'  # Fetch, then a commit-by-commit visual log of differences.
alias lsopts='print -rl ${(k)options}'  # Print a list of all 'opt' values possible to set via 'setopt xxx'.
alias sshs='sshsx'  # SSH into slice and run arbitrary commands.
alias sshsx='sshsx'  # SSH into slice via pwsh7 and run arbitrary commands.
alias sshsp='sshsx cdpo'  # SSH into slice and run cdpon.
alias sshspn='sshsx cdpon'  # SSH into slice and run cdpon.


